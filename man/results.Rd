% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/method-results.R
\name{results}
\alias{results}
\alias{results,OutriderDataSet-method}
\title{Accessor function for the 'results' object in an OutriderDataSet object.}
\usage{
results(object, ...)

\S4method{results}{OutriderDataSet}(
  object,
  padjCutoff = 0.05,
  zScoreCutoff = 0,
  round = 2,
  all = FALSE,
  returnTranscriptomewideResults = TRUE,
  ...
)
}
\arguments{
\item{object}{An OutriderDataSet object}

\item{...}{Additional arguments, currently not used}

\item{padjCutoff}{The significant threshold to be applied}

\item{zScoreCutoff}{If provided additionally a z score threshold is applied}

\item{round}{Can be TRUE, defaults to 2, or an integer used for rounding
with \code{\link[base]{round}} to make the output
more user friendly}

\item{all}{By default FALSE, only significant read counts are listed in the 
results. If TRUE all results are assembled resulting in a 
data.table of length samples x genes. If FDR corrected pvalues 
for subsets of genes of interest have been calculated, this 
indicates whether the whole subset will be listed in the results.}

\item{returnTranscriptomewideResults}{If FDR corrected pvalues for subsets 
of genes of interest have been calculated, this parameter 
indicates whether additionally the transcriptome-wide results 
should be returned as well (default), or whether only results 
for those subsets should be retrieved.}
}
\value{
A data.table where each row is an outlier event and the columns
            contain additional information about this event. Eg padj, l2fc
}
\description{
This function assembles a results table of significant outlier events based
on the given filter criteria. The table contains various information 
accumulated over the analysis pipeline.
}
\examples{

ods <- makeExampleOutriderDataSet()
\dontshow{
    ods <- ods[1:10,1:10]
}
ods <- OUTRIDER(ods)

res <- results(ods, all=TRUE)
res

# example of retrieving results with FDR correction limited to a 
# set of genes of interest
genesOfInterest <- list("sample_1"=sample(rownames(ods), 3), 
                         "sample_2"=sample(rownames(ods), 8), 
                         "sample_6"=sample(rownames(ods), 5))
genesOfInterest
ods <- computePvalues(ods, subsets=list("exampleSubset"=genesOfInterest))
res <- results(ods, all=TRUE, returnTranscriptomewideResults=FALSE)
res

}
