% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/method-plot.R
\docType{methods}
\name{plotVolcano}
\alias{plotVolcano}
\alias{plotFunctions}
\alias{plotQQ}
\alias{plotExpressionRank}
\alias{plotCountCorHeatmap}
\alias{plotAberrantPerSample}
\alias{plotFPKM}
\alias{plotDispEsts}
\alias{plotPowerAnalysis}
\alias{plotDispEsts,OutriderDataSet-method}
\alias{plotEncDimSearch}
\title{Visualization functions for OUTRIDER}
\usage{
plotVolcano(ods, sampleID, main, padjCutoff = 0.05, zScoreCutoff = 0,
  pch = 16, basePlot = FALSE, col = c("gray", "firebrick"))

plotQQ(ods, geneID, main, global = FALSE, padjCutoff = 0.05,
  zScoreCutoff = 0, samplePoints = TRUE, legendPos = "topleft",
  outlierRatio = 0.001, conf.alpha = 0.05, pch = 16, xlim = NULL,
  ylim = NULL, col = NULL)

plotExpressionRank(ods, geneID, main, padjCutoff = 0.05,
  zScoreCutoff = 0, normalized = TRUE, basePlot = FALSE,
  log = TRUE, col = c("gray", "firebrick"), ...)

plotCountCorHeatmap(ods, normalized = TRUE, rowCentered = TRUE,
  rowCoFactor = NULL, rowColSet = "Set1", colCoFactor = NULL,
  colColSet = "Set2", nCluster = 4,
  main = "Count correlation heatmap", dendrogram = "both",
  basePlot = TRUE, names = c("both", "row", "col", "none"), ...)

plotAberrantPerSample(ods, main, padjCutoff = 0.05, zScoreCutoff = 0,
  outlierRatio = 0.001, col = brewer.pal(3, "Dark2")[c(1, 2)],
  yadjust = c(1.2, 1.2), labLine = c(3.5, 3),
  ylab = "#Aberrantly expressed genes", labCex = par()$cex,
  ymax = NULL, ...)

plotFPKM(ods)

\S4method{plotDispEsts}{OutriderDataSet}(object, compareDisp, xlim, ylim,
  main = "Dispersion estimates versus mean expression", ...)

plotPowerAnalysis(ods)

plotEncDimSearch(ods)
}
\arguments{
\item{ods, object}{An OutriderDataSet object.}

\item{sampleID, geneID}{A sample or gene ID, which should be plotted. 
Can also be a vector. Integers are treated as indices.}

\item{main}{Title for the plot, if missing a default title will be used.}

\item{padjCutoff, zScoreCutoff}{Significance or Z-score cutoff
to mark outliers}

\item{pch}{Integer or character to be used for plotting the points}

\item{basePlot}{if \code{TRUE}, use the R base plot version, else use the
plotly framework, which is the default}

\item{col}{Set color for the points. If set, it must be a character vector 
of length 2. (1. normal point; 2. outlier point)}

\item{global}{Flag to plot a global Q-Q plot, default FALSE}

\item{samplePoints}{Sample points for Q-Q plot, defaults to max 30k points}

\item{legendPos}{Set legendpos, by default topleft.}

\item{outlierRatio}{The fraction to be used for the outlier sample filtering}

\item{conf.alpha}{If set, a confidence interval is plotted, defaults to 0.05}

\item{xlim, ylim}{The x/y limits for the plot or NULL to use 
the full data range}

\item{normalized}{If TRUE, the normalized counts are used, the default,
otherwise the raw counts}

\item{log}{If TRUE, the default, counts are plotted in log10.}

\item{...}{Additional parameters passed to plot() or plot_ly() if not stated
otherwise in the details for each plot function}

\item{rowCentered}{If TRUE, the counts are row-wise (gene-wise) centered}

\item{rowCoFactor}{A vector of co-factors for color coding the rows}

\item{rowColSet}{A vector of colors or a color set from RColorBrewer}

\item{colCoFactor}{A vector of co-factors for color coding the columns}

\item{colColSet}{A vector of colors or a color set from RColorBrewer}

\item{nCluster}{An integer to be used for cutting the dendrogram into groups.
If this argument is set the resulting clusters are saved in the 
returned OutriderDataSet.}

\item{dendrogram}{A character string indicating whether to draw 
'none', 'row', 'column' or 'both' dendrograms.}

\item{names}{character string indicating whether to draw 
'none', 'row', 'col', or 'both' names.}

\item{yadjust}{Option to adjust position of Median and 90 percentile labels.}

\item{labLine}{Option to move axis labels}

\item{ylab}{The y axis label}

\item{labCex}{The label cex parameter}

\item{ymax}{If set, ymax is the upper bound for the plot range on the y axis.}

\item{compareDisp}{If TRUE, the default, and if the autoCorrect normalization
was used it computes the dispersion without autoCorrect and 
plots it for comparison.}
}
\value{
If base R graphics are used nothing is returned else the plotly or
            the gplot object is returned.
}
\description{
The OUTRIDER package provides mutliple functions to visualize 
the data and the results of a full data set analysis.

This is the list of all plotting function provided by OUTRIDER:
\itemize{
  \item plotAberrantPerSample()
  \item plotVolcano()
  \item plotExpressionRank()
  \item plotQQ()
  \item plotCountCorHeatmap()
  \item plotFPKM()
  \item plotDispEsts()
  \item plotPowerAnalysis()
  \item plotEncDimSearch()
}

For a detailed description of each plot function please see the details.
Most of the functions share the same parameters.
}
\details{
\code{plotAberrantPerSample}: The number of aberrant events per sample are 
plotted sorted by rank. The ... parameters are passed on to the 
\code{\link{aberrant}} function. 

\code{plotVolcano}: the volcano plot is sample-centric. It plots for a given
sample the negative log10 nominal P-values against the Z-scores for all
genes.

\code{plotExpressionRank}: This function plots for a given gene the 
expression level against the expression rank for all samples. This can 
be used with normalized and unnormalized expression values.

\code{plotQQ}: the quantile-quantile plot for a given gene or if 
\code{global} is set to \code{TRUE} over the full data set. Here the 
observed P-values are plotted against the expected ones in the negative 
log10 space.

\code{plotCountCorHeatmap}: The correlation heatmap of the count data
of the full data set. Default the values are log transformed and 
row centered. This function returns an OutriderDataSet with annotated 
clusters if requested. The ... arguments are passed to the 
\code{\link[gplots]{heatmap.2}} function.

\code{plotFPKM}: The distribution of FPKM values. If the OutriderDataSet
object contains the \code{passedFilter} column, it will plot both FPKM
distributions for the expressed genes and for the filtered genes.

\code{plotDispEsts}: Plots the dispersion of the OutriderDataSet 
model against the normalized mean count. If autoCorrect is used it will also
estimate the dispersion without normalization for comparison.

\code{plotPowerAnalysis}: The power analysis plot should give the user a
ruff estimate of the events one can be detected with OUTRIDER. Based on 
the dispersion of the provided OUTRIDER data set the theoretical P-value
over the mean expression is plotted. This is done for different expression
levels. The curves are smooths to make the reading of the plot easier.
}
\examples{
ods <- makeExampleOutriderDataSet(dataset="Kremer")
implementation <- 'autoencoder'
\dontshow{
    # reduce the object size to speed up the calculations
    ods <- ods[400:410,60:70]
    implementation <- 'pca'
}
ods <- filterExpression(ods, minCounts=TRUE)
ods <- OUTRIDER(ods, implementation=implementation)

plotAberrantPerSample(ods)

plotVolcano(ods, 1)
plotVolcano(ods, 'MUC1404', basePlot=TRUE)

plotExpressionRank(ods, 1)
plotExpressionRank(ods, "FAAH", normalized=FALSE, 
    log=FALSE, main="Over expression outlier", basePlot=TRUE)

plotQQ(ods, 1)
plotQQ(ods, global=TRUE, outlierRatio=0.001)

sex <- sample(c("female", "male"), dim(ods)[2], replace=TRUE)
colData(ods)$sex <- sex
ods <- plotCountCorHeatmap(ods, colCoFactor="sex", normalized=FALSE)
ods <- plotCountCorHeatmap(ods, nCluster=4)
head(colData(ods)$clusterNumber)

mcols(ods)$basepairs <- 1
mcols(ods)$passedFilter <- rowMeans(counts(ods)) > 10
plotFPKM(ods)

plotDispEsts(ods, compareDisp=FALSE)

plotPowerAnalysis(ods)

\dontrun{
ods <- findEncodingDim(ods)
plotEncDimSearch(ods)
}

}
